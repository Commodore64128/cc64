TEST-GLOBAL-DEFINITIONS
0 stat, 0 cstat, 0 stat, 
TEST-FOR
*label*: 1 
jmp ahead 2 
*label*: 3 
jmp 1 
patch 2 
jmp 3 
*label*: 4 
jmp ahead 5 
*label*: 6 
jmp 4 
patch 5 
jmp 6 
TEST-KR-FUNC
*label*: 1 
rts
TEST-INT-ARRAY-INIT
0 stat, 0 stat, 0 stat, 
3 stat, 2 stat, 1 stat, 
0 stat, 5 stat, 4 stat, 
9 stat, 8 stat, 7 stat, 
bad initializer
 static int f[2] = {10, 11, 12}; 
                               ^
11 stat, 10 stat, 
TEST-CHAR-ARRAY-INIT
0 cstat, 0 cstat, 0 cstat, 0 cstat, 
0 cstat, 67 cstat, 66 cstat, 65 cstat, 
0 cstat, 0 cstat, 69 cstat, 68 cstat, 
0 cstat, 73 cstat, 72 cstat, 71 cstat, 
bad initializer
 static char f[3] = "jkl"; 
                         ^
76 cstat, 75 cstat, 74 cstat, 
TEST-LOCAL-INIT
1 stat, 
50 cstat, 
1234 stat, 
size: 2 
lda.s #3 
size: 2 
sta.s (base),#4 

#GOLDEN TODO: Change back to size: 1 when issue/28
#GOLDEN (8/16-bit smart expressions) is solved.
size: 2 
lda.s #52 
size: 1 
sta.s (base),#6 

size: 2 
lda.s #5678 
size: 2 
sta.s (base),#7 

TEST-LOCAL-NO-INIT
0 stat, 
0 cstat, 
0 stat, 



TEST-FUNC-CALL
*label*: 1 
size: 2 
lda.s #65 
size: 2 
sta.s (base),#0 
link# 0 
1 arguments
jsr  32772 
link# 0 
rts
TEST-FUNC-FASTCALL
*label*: 1 
size: 2 
lda.s #66 
jsr  32775 
rts
TEST-FUNC-PTR-CALL
*label*: 1 
size: 2 
lda.s #32778 
size: 2 
sta.s (base),#0 
size: 2 
lda.s (base),#0 
pha'
size: 2 
lda.s #67 
size: 2 
sta.s (base),#2 
sta $zp
link# 2 
1 arguments
jsr (zp)
link# -2 
rts
TEST-FUNC-PTR-FASTCALL
*label*: 1 
size: 2 
lda.s #32781 
size: 2 
sta.s (base),#0 
size: 2 
lda.s (base),#0 
size: 2 
sta.s  40958 
size: 2 
lda.s #68 
jsr (laststatic)
rts
TEST-NESTED-FASTCALL-PTR
*label*: 1 
size: 2 
lda.s #32784 
size: 2 
sta.s (base),#0 
size: 2 
lda.s #32784 
size: 2 
sta.s (base),#2 
size: 2 
sta.s (base),#4 
size: 2 
lda.s (base),#0 
size: 2 
sta.s  40958 
size: 2 
lda.s (base),#2 
pha'
size: 2 
lda.s #69 
jsr (stack)
jsr (laststatic)
size: 2 
lda.s (base),#0 
size: 2 
sta.s  40958 
size: 2 
lda.s (base),#2 
pha'
size: 2 
lda.s (base),#4 
pha'
size: 2 
lda.s #69 
jsr (stack)
jsr (stack)
jsr (laststatic)
rts

